name: "iot_default"

version: 1.0.0

client:
  organization: Org2
  logging:
    level: info    
  cryptoconfig:
    path: ${GOPATH}/src/github.com/iot/crypto-config
  credentialStore:
    path: "/tmp/iot-store"
    cryptoStore:
      path: /tmp/iot-msp
  BCCSP:
    security:
      enabled: true
      default:
        provider: "SW"
      hashAlgorithm: "SHA2"
      softVerify: true
      level: 256
  tlsCerts:
    systemCertPool: false
    client:
      key:
        path: ${GOPATH}/src/github.com/iot/crypto-config/peerOrganizations/org2.iot.com/users/User1@org2.iot.com/tls/client.key
      cert:
        path: ${GOPATH}/src/github.com/iot/crypto-config/peerOrganizations/org2.iot.com/users/User1@org2.iot.com/tls/client.crt
channels:
  iotchannel:
    peers:
      peer0.org1.iot.com:
        endorsingPeer: true
        chaincodeQuery: true
        ledgerQuery: true
        eventSource: true
        discover: true
      peer1.org1.iot.com:
        endorsingPeer: true
        chaincodeQuery: true
        ledgerQuery: true
        eventSource: true
        discover: true
      peer0.org2.iot.com:
        endorsingPeer: true
        chaincodeQuery: true
        ledgerQuery: true
        eventSource: true
        discover: true
      peer1.org2.iot.com:
        endorsingPeer: true
        chaincodeQuery: true
        ledgerQuery: true
        eventSource: true
        discover: true
    policies:
      #[Optional] options for retrieving channel configuration blocks
      queryChannelConfig:
        #[Optional] min number of success responses (from targets/peers)
        minResponses: 1
        #[Optional] channel config will be retrieved for these number of random targets
        maxTargets: 4
        #[Optional] retry options for query config block
        retryOpts:
          #[Optional] number of retry attempts
          attempts: 5
          #[Optional] the back off interval for the first retry attempt
          initialBackoff: 500ms
          #[Optional] the maximum back off interval for any retry attempt
          maxBackoff: 5s
          #[Optional] he factor by which the initial back off period is exponentially incremented
          backoffFactor: 2.0
      #[Optional] options for retrieving discovery info
      discovery:
        #[Optional] discovery info will be retrieved for these number of random targets
        maxTargets: 4
        #[Optional] retry options for retrieving discovery info
        retryOpts:
          #[Optional] number of retry attempts
          attempts: 4
          #[Optional] the back off interval for the first retry attempt
          initialBackoff: 500ms
          #[Optional] the maximum back off interval for any retry attempt
          maxBackoff: 5s
          #[Optional] he factor by which the initial back off period is exponentially incremented
          backoffFactor: 2.0
      #[Optional] options for the event service
      eventService:
        # [Optional] resolverStrategy specifies the peer resolver strategy to use when connecting to a peer
        # Possible values: [PreferOrg (default), MinBlockHeight, Balanced]
        #
        # PreferOrg:
        #   Determines which peers are suitable based on block height lag threshold, although will prefer the peers in the
        #   current org (as long as their block height is above a configured threshold). If none of the peers from the current org
        #   are suitable then a peer from another org is chosen.
        # MinBlockHeight:
        #   Chooses the best peer according to a block height lag threshold. The maximum block height of all peers is
        #   determined and the peers whose block heights are under the maximum height but above a provided "lag" threshold are load
        #   balanced. The other peers are not considered.
        # Balanced:
        #   Chooses peers using the configured balancer.
        resolverStrategy: PreferOrg
        # [Optional] balancer is the balancer to use when choosing a peer to connect to
        # Possible values: [Random (default), RoundRobin]
        balancer: Random
        # [Optional] blockHeightLagThreshold sets the block height lag threshold. This value is used for choosing a peer
        # to connect to. If a peer is lagging behind the most up-to-date peer by more than the given number of
        # blocks then it will be excluded from selection.
        # If set to 0 then only the most up-to-date peers are considered.
        # If set to -1 then all peers (regardless of block height) are considered for selection.
        # Default: 5
        blockHeightLagThreshold: 5
        # [Optional] reconnectBlockHeightLagThreshold - if >0 then the event client will disconnect from the peer if the peer's
        # block height falls behind the specified number of blocks and will reconnect to a better performing peer.
        # If set to 0 then this feature is disabled.
        # Default: 10
        # NOTES:
        #   - peerMonitorPeriod must be >0 to enable this feature
        #   - Setting this value too low may cause the event client to disconnect/reconnect too frequently, thereby
        #     affecting performance.
        reconnectBlockHeightLagThreshold: 10
        # [Optional] peerMonitorPeriod is the period in which the connected peer is monitored to see if
        # the event client should disconnect from it and reconnect to another peer.
        # Default: 0 (disabled)
        peerMonitorPeriod: 5s

organizations:
  Org1:
    mspid: Org1MSP
    cryptoPath: peerOrganizations/org1.iot.com/users/{userName}@org1.iot.com/msp
    peers:
      - peer0.org1.iot.com
      - peer1.org1.iot.com

  Org2:
    mspid: Org2MSP
    cryptoPath: peerOrganizations/org2.iot.com/users/{userName}@org2.iot.com/msp
    peers:
      - peer0.org2.iot.com
      - peer1.org2.iot.com

orderers:
  orderer.iot.com:
    url: localhost:7050
    tlsCACerts:
      # Certificate location absolute path
      path: ${GOPATH}/src/github.com/iot/crypto-config/ordererOrganizations/iot.com/tlsca/tlsca.iot.com-cert.pem

peers:
  #_default:


  peer0.org1.iot.com:
    url: localhost:7051
    #eventUrl: grpcs://peer0.org1.iot.com:7053
    grpcOptions:
      ssl-target-name-override: peer0.org1.iot.com
      keep-alive-time: 0s
      keep-alive-timeout: 20s
      keep-alive-permit: false
      fail-fast: false
      allow-insecure: false
    tlsCACerts:
      path: ${GOPATH}/src/github.com/iot/crypto-config/peerOrganizations/org1.iot.com/tlsca/tlsca.org1.iot.com-cert.pem
  peer1.org1.iot.com:
    url: localhost:8051
    #eventUrl: grpcs://peer0.org1.iot.com:7053
    grpcOptions:
      ssl-target-name-override: peer1.org1.iot.com
      keep-alive-time: 0s
      keep-alive-timeout: 20s
      keep-alive-permit: false
      fail-fast: false
      allow-insecure: false
    tlsCACerts:
      path: ${GOPATH}/src/github.com/iot/crypto-config/peerOrganizations/org1.iot.com/tlsca/tlsca.org1.iot.com-cert.pem
  peer0.org2.iot.com:
    url: localhost:9051
    #eventUrl: grpcs://peer0.org2.iot.com:9053
    grpcOptions:
      ssl-target-name-override: peer0.org2.iot.com
      keep-alive-time: 0s
      keep-alive-timeout: 20s
      keep-alive-permit: false
      fail-fast: false
      allow-insecure: false
    tlsCACerts:
      path: ${GOPATH}/src/github.com/iot/crypto-config/peerOrganizations/org2.iot.com/tlsca/tlsca.org2.iot.com-cert.pem

  peer1.org2.iot.com:
    url: localhost:10051
    #eventUrl: grpcs://peer0.org2.iot.com:9053
    grpcOptions:
      ssl-target-name-override: peer1.org2.iot.com
      keep-alive-time: 0s
      keep-alive-timeout: 20s
      keep-alive-permit: false
      fail-fast: false
      allow-insecure: false
    tlsCACerts:
      path: ${GOPATH}/src/github.com/iot/crypto-config/peerOrganizations/org2.iot.com/tlsca/tlsca.org2.iot.com-cert.pem

entityMatchers:
  peer:
    - pattern: (\w*)peer0.org1.iot.com(\w*)
      urlSubstitutionExp: peer0.org1.iot.com:7051
      eventUrlSubstitutionExp: peer0.org1.iot.com:7053
      sslTargetOverrideUrlSubstitutionExp: peer0.org1.iot.com
      mappedHost: peer0.org1.iot.com

    - pattern: (\w*)peer1.org1.iot.com(\w*)
      urlSubstitutionExp: peer1.org1.iot.com:8051
      eventUrlSubstitutionExp: peer1.org1.iot.com:8053
      sslTargetOverrideUrlSubstitutionExp: peer1.org1.iot.com
      mappedHost: peer1.org1.iot.com

    - pattern: (\w*)peer0.org2.iot.com(\w*)
      urlSubstitutionExp: peer0.org2.iot.com:9051
      eventUrlSubstitutionExp: peer0.org2.iot.com:9053
      sslTargetOverrideUrlSubstitutionExp: peer0.org2.iot.com
      mappedHost: peer0.org2.iot.com

    - pattern: (\w*)peer1.org2.iot.com(\w*)
      urlSubstitutionExp: peer1.org2.iot.com:10051
      eventUrlSubstitutionExp: peer1.org2.iot.com:10053
      sslTargetOverrideUrlSubstitutionExp: peer1.org2.iot.com
      mappedHost: peer1.org2.iot.com

  orderer:
    - pattern: (\w*)orderer.iot.com(\w*)
      urlSubstitutionExp: orderer.iot.com:7050
      sslTargetOverrideUrlSubstitutionExp: orderer.iot.com
      mappedHost: orderer.iot.com